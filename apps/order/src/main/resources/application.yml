server:
  port: 8082

spring:
  application:
    name: order-service
  sleuth:
    sampler:
      probability: 1
  datasource:
    url: "jdbc:mysql://localhost:3306/order_db?queryInterceptors=brave.mysql8.TracingQueryInterceptor&exceptionInterceptors=brave.mysql8.TracingExceptionInterceptor"
    username: root
    password: root
  jpa:
    hibernate:
      ddl-auto: update
  cloud:
    function:
      definition: onOrderCreatedDraft;onInventoryReservationCancelledForOrder;onQuotaDeductedForOrder
    stream:
      poller:
        fixed-delay: 10
      bindings:
        onOrderCreatedDraft-out-0:
          binder: pubsub
          destination: orderCreatedDraft
          group: order
          producer:
            required-groups: order # create queue explicitly - for supplier
        onInventoryReservationCancelledForOrder-in-0:
          binder: pubsub
          destination: inventoryReservationCancelledForOrder
          group: inventory
        onQuotaDeductedForOrder-in-0:
          binder: pubsub
          destination: quotaDeductedForOrder
          group: quota # create durable queue

app:
  inventory-service:
    url: "http://localhost:8081"
  user-service:
    url: "http://localhost:8083"
